{"version":3,"sources":["Counter.js","App.js","index.js"],"names":["Counter","props","state","count","initialCount","console","log","onClick","changeCount","this","amount","setState","prevState","Component","App","ReactDOM","render","document","getElementById"],"mappings":"wKAIqBA,E,kDAGnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAOF,EAAMG,cAJE,E,0CAQnB,WAAU,IAAD,OAGP,OADAC,QAAQC,IAAI,kBAEV,gCACE,wBAAQC,QAAS,kBAAM,EAAKC,aAAa,IAAzC,eAEA,+BAAOC,KAAKP,MAAMC,QAClB,wBAAQI,QAAS,kBAAM,EAAKC,YAAY,IAAxC,oB,yBAMN,SAAYE,GAGVD,KAAKE,UAAS,SAACC,GACb,MAAO,CAAET,MAAOS,EAAUT,MAAQO,U,GA7BHG,aCStBC,MAVf,WAOE,OAHAT,QAAQC,IAAI,cAGL,cAAC,EAAD,CAASF,aAAc,KCNhCW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4a9c0889.chunk.js","sourcesContent":["// React allows us to write JSX, Componenet allows us to create class\nimport React, { Component } from 'react';\n\n// all of the code inside this class becomes react component\nexport default class Counter extends Component {\n  //allows us to use state\n  //always takes props\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      count: props.initialCount,\n    };\n  }\n\n  render() {\n    //this gets consoled everytime this component rerenders\n    console.log('render counter');\n    return (\n      <div>\n        <button onClick={() => this.changeCount(-1)}>-</button>\n        {/*acesses prop InitialCount passed down from App.js*/}\n        <span>{this.state.count}</span>\n        <button onClick={() => this.changeCount(+1)}>+</button>\n      </div>\n    );\n  }\n\n  //it Acesses previous state\n  changeCount(amount) {\n    //this.setState({ count: this.state.count + amount });\n    //this setState is asynchronous\n    this.setState((prevState) => {\n      return { count: prevState.count + amount };\n    });\n  }\n  /*\n    \n  */\n}\n","import React from 'react';\nimport Counter from './Counter';\n\nfunction App() {\n  //it get consoled only once when page loads and not everytime <Counter/> rerenders\n  //because when state changes it only renders component you are inside of \n  //and any child components that are rendered from that component\n  console.log('Render App');\n  //passed down initialCount as 0 down to <Counter/> as props\n  //you access it by using this.props.initialCount\n  return <Counter initialCount={1} />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}